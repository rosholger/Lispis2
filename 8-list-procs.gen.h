// Autogenerated from file stdlib/8-list-procs.lsp DO NOT TOUCH
doString(&vm,
"(define map (proc lst)\n"
"  (let ret '())\n"
"  (let curr '())\n"
"  (for (elem (list-iterator lst))\n"
"       (if (null? ret)\n"
"           (scope\n"
"            (set! ret (cons (proc elem) ret))\n"
"            (set! curr ret))\n"
"           (scope\n"
"            (set-cdr! curr (cons (proc elem) '()))\n"
"            (set! curr (cdr curr)))))\n"
"  ret)\n"
"\n"
"(define foldl (proc init lst)\n"
"  (let ret init)\n"
"  (for (elem (list-iterator lst))\n"
"       (set! ret (proc elem ret)))\n"
"  ret)\n"
"\n"
"(define foldr (proc init lst)\n"
"  (if (null? lst)\n"
"      init\n"
"      (proc (car lst) (foldr proc init (cdr lst)))))\n"
"",
0, false, "stdlib/8-list-procs.lsp");